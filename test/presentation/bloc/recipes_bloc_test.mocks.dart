// Mocks generated by Mockito 5.4.6 from annotations
// in aplazo_recipes_app/test/presentation/bloc/recipes_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:aplazo_recipes_app/domain/models/meal_model.dart' as _i2;
import 'package:aplazo_recipes_app/domain/repositories/meal_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMealsModel_0 extends _i1.SmartFake implements _i2.MealsModel {
  _FakeMealsModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MealRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMealRepository extends _i1.Mock implements _i3.MealRepository {
  MockMealRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.MealsModel> searchMealsByName(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#searchMealsByName, [name]),
            returnValue: _i4.Future<_i2.MealsModel>.value(
              _FakeMealsModel_0(
                this,
                Invocation.method(#searchMealsByName, [name]),
              ),
            ),
          )
          as _i4.Future<_i2.MealsModel>);

  @override
  _i4.Future<List<_i2.Meal>> getMealsForPage(
    int? pageKey,
    String? searchQuery,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMealsForPage, [pageKey, searchQuery]),
            returnValue: _i4.Future<List<_i2.Meal>>.value(<_i2.Meal>[]),
          )
          as _i4.Future<List<_i2.Meal>>);

  @override
  _i4.Future<List<_i2.Meal>> getRandomMealsForPage(int? pageKey) =>
      (super.noSuchMethod(
            Invocation.method(#getRandomMealsForPage, [pageKey]),
            returnValue: _i4.Future<List<_i2.Meal>>.value(<_i2.Meal>[]),
          )
          as _i4.Future<List<_i2.Meal>>);

  @override
  _i4.Future<List<_i2.Meal>> getMealsByCategory(
    String? category,
    int? pageKey,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMealsByCategory, [category, pageKey]),
            returnValue: _i4.Future<List<_i2.Meal>>.value(<_i2.Meal>[]),
          )
          as _i4.Future<List<_i2.Meal>>);

  @override
  void clearSearchCache() => super.noSuchMethod(
    Invocation.method(#clearSearchCache, []),
    returnValueForMissingStub: null,
  );
}
